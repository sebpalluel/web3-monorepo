overwrite: true
watch: true
schema:
  - 'http://localhost:8080/v1/graphql':
      headers:
        'x-hasura-admin-secret': 'password'
        'x-hasura-default-role': 'admin'
        'x-hasura-role': 'admin'

generates:
  # admin
  libs/client/gql/admin/src/generated/schema.json:
    plugins:
      - 'introspection'
  libs/client/gql/admin/src/generated/schema.graphql:
    plugins:
      - 'schema-ast'
  libs/client/gql/admin/src/generated/index.ts:
    documents: './libs/client/gql/admin/src/queries/**/*.{graphql,gql}'
    plugins:
      - 'typescript':
          constEnums: true
      - 'typescript-operations':
          preResolveTypes: true
      - 'typescript-generic-sdk':
          noExport: true
          documentMode: 'string'
      - 'add':
          content: 'import { fetchData } from "@client/hasura/fetcher";'
          placement: 'prepend'
      - 'add':
          content: 'export const adminSdk = getSdk(fetchData({admin:true}));'
          placement: 'append'
  # user
  libs/client/gql/user/src/generated/schema.json:
    plugins:
      - 'introspection'
    schema:
      - &userSchema
        ${NEXT_PUBLIC_HASURA_URL:http://localhost:8080/v1/graphql}:
          headers:
            'x-hasura-admin-secret': ${HASURA_ADMIN_SECRET:password}
            'x-hasura-default-role': 'user'
            'x-hasura-role': 'user'
  libs/client/gql/user/src/generated/schema.graphql:
    plugins:
      - 'schema-ast'
    schema:
      - *userSchema
  libs/client/gql/user/src/generated/index.ts:
    schema:
      - *userSchema
    documents: './libs/client/gql/user/src/queries/**/*.{graphql,gql}'
    plugins:
      - 'typescript':
          constEnums: true
      - 'typescript-operations':
          preResolveTypes: true
      - 'typescript-react-query':
          fetcher:
            func: '@client/hasura/fetcher#fetchDataReactQuery'
            isReactHook: false
          errorType: Error
  # test user
  libs/test-utils/gql/src/generated/test-user.ts:
    schema:
      - *userSchema
    documents: './libs/client/gql/user/src/queries/**/*.{graphql,gql}'
    plugins:
      - 'typescript':
          constEnums: true
      - 'typescript-operations':
          preResolveTypes: true
      - 'typescript-generic-sdk':
          noExport: true
          documentMode: 'string'

    # ## hasura
    # #  doesn't support yet separated fragments so it fail
    # #  TODO: follow up on this issue https://github.com/dotansimha/graphql-code-generator/issues/7700
    # #  ref: https://www.graphql-code-generator.com/plugins/other/hasura-allow-list
    # hasura/app/metadata/query_collections.yaml:
    #   documents: './libs/client/gql/*/src/queries/**/*.{graphql,gql}'
    #   plugins:
    #     - 'hasura-allow-list'
    #   hooks:
    #     afterOneFileWrite:
    #       - make restart-hasura
