# https://github.com/testjavascript/nodejs-integration-tests-best-practices#section-1-infrastructure-and-database-setup
version: '3.9'
services:
  test-db:
    image: postgres:12
    command: postgres -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0 -p ${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_PORT=${POSTGRES_PORT}
    env_file:
      - .env.test
    container_name: 'postgres_test'
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    tmpfs: /var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -p ${POSTGRES_PORT} -U ${POSTGRES_USER}']
      interval: 2s
      timeout: 2s
      retries: 10
  hasura-engine:
    image: 'hasura/graphql-engine:${HASURA_VERSION}.cli-migrations-v3'
    # command: 'graphql-engine --database-url $HASURA_GRAPHQL_DATABASE_URL serve --server-port $HASURA_GRAPHQL_SERVER_PORT'
    container_name: 'hasura_test'
    depends_on:
      test-db:
        condition: service_healthy
    env_file:
      - .env.test
    environment:
      HASURA_GRAPHQL_NO_OF_RETRIES: '10'
    ports:
      - '${HASURA_GRAPHQL_SERVER_PORT}:${HASURA_GRAPHQL_SERVER_PORT}'
    volumes:
      - ../../hasura-console/app/migrations:/hasura-migrations
      - ../../hasura-console/app/metadata:/hasura-metadata
